apply plugin: 'com.android.application'

android {
  compileSdkVersion rootProject.ext.androidCompileSdkVersion
  buildToolsVersion rootProject.ext.androidBuildToolsVersion


  defaultConfig {
    applicationId rootProject.ext.applicationId
    minSdkVersion rootProject.ext.androidMinSdkVersion
    targetSdkVersion rootProject.ext.androidTargetSdkVersion
    versionCode rootProject.ext.versionCode
    versionName rootProject.ext.versionName

    testApplicationId rootProject.ext.testApplicationId
    testInstrumentationRunner rootProject.ext.androidTestInstrumentationRunner

    vectorDrawables.useSupportLibrary = true
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/rxjava.properties'
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
    disable 'InvalidPackage'
    disable 'OldTargetApi'
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }

  signingConfigs {
    debug {
      storeFile rootProject.file("buildsystem/debug.keystore")
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
    }

    release {
      signingConfig signingConfigs.debug

      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  repositories {
    maven { url 'https://maven.google.com' }
  }
}

dependencies {
  implementation project(':domain')
  implementation project(':data')

  def presentationDependencies = rootProject.ext.presentationDependencies
  def presentationTestDependencies = rootProject.ext.presentationTestDependencies
  def developmentDependencies = rootProject.ext.developmentDependencies

  implementation presentationDependencies.dagger
  annotationProcessor presentationDependencies.daggerCompiler
  implementation presentationDependencies.rxJava
  implementation presentationDependencies.rxAndroid
  implementation presentationDependencies.javaxAnnotation
  implementation presentationDependencies.butterknife
  annotationProcessor presentationDependencies.butterknifeCompiler
  implementation presentationDependencies.glide
  annotationProcessor presentationDependencies.glideCompiler
  implementation presentationDependencies.appcompatV7
  implementation presentationDependencies.cardviewV7
  implementation presentationDependencies.recyclerviewV7
  implementation presentationDependencies.supportV13
  implementation presentationDependencies.design

  testImplementation presentationTestDependencies.junit
  testImplementation presentationTestDependencies.hamcrest
  testImplementation presentationTestDependencies.mockito
  testImplementation presentationTestDependencies.powermockJunit
  testImplementation presentationTestDependencies.powermockMockito

  androidTestImplementation presentationTestDependencies.runner
  androidTestImplementation presentationTestDependencies.rules
  androidTestImplementation(presentationTestDependencies.espressoCore, {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  androidTestImplementation(presentationTestDependencies.espressoContrib, {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  androidTestImplementation(presentationTestDependencies.espressoIntents, {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  implementation(presentationTestDependencies.espressoIdlingResource, {
    exclude group: 'com.android.support', module: 'support-annotations'
  })

  androidTestImplementation presentationDependencies.appcompatV7
  androidTestImplementation presentationDependencies.recyclerviewV7
  androidTestImplementation presentationDependencies.design

  debugImplementation developmentDependencies.leakCanaryDebug
  releaseImplementation developmentDependencies.leakCanaryRelease
}

checkstyle {
  toolVersion rootProject.ext.checkstyleToolVersion
}
